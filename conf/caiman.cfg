# -*- python -*-
# ex: set filetype=python:

from buildbot.plugins import *
from pymongo import MongoClient
from ConfigParser import SafeConfigParser
import os, sys

conf = SafeConfigParser()
conf.read('user.conf')

USER = conf.get('main', 'user')
WEB_LOGIN = conf.get('main', 'web_login')
WEB_PASS = conf.get('main', 'web_pass')
SLAVE_PASS = conf.get('main', 'slave_pass')
SLAVE_AMI = conf.get('main', 'slave_ami')

db = MongoClient('localhost', 27017).cerise

factories = {}
userObj = db.User.find_one({"username": USER})
BB_PORT = sum([userObj['port_offset'], 9000])
HTTP_PORT = sum([userObj['port_offset'], 20000])
projects = userObj['projects']

c = BuildmasterConfig = {}

# iterate through user's projects and create factories
for project in projects:
    factories[project['name']] = util.BuildFactory()
    factories[project['name']].addStep(steps.Git(repourl=project['gitrepo'],
                                        mode='incremental', workdir="~/" + project['gitrepo']))
    for step in project['steps']:
        factories[project['name']].addStep(steps.ShellCommand(command=split(step['action']), workdir=step['workdir'])

c['workers'] = [buildslave.EC2LatentBuildSlave("build-slave", SLAVE_PASS, "c4.large", SLAVE_AMI, region='us-west-2', security_name="76e0a910")]

# create builders from factories
for factory in factories:
    c['builders'].append(
        BuilderConfig(name=factory, slavenames=['build-slave'], factory=factories[factory])

c['protocols'] = {'pb': {'port': BB_PORT}}

c['change_source'] = []
c['change_source'].append(changes.GitPoller(
        'https://xassembly-worker:' + GIT_TOKEN + '@github.com/exactassembly/caiman.git',
        workdir='/caiman', branch='newarch',
        pollinterval=300))

c['schedulers'] = []
c['schedulers'].append(schedulers.SingleBranchScheduler(
                            name="all",
                            change_filter=util.ChangeFilter(branch='newarch'),
                            treeStableTimer=None,
                            builderNames=["builder"]))
c['schedulers'].append(schedulers.ForceScheduler(
                            name="force",
                            builderNames=["builder"]))

c['builders'] = [
                util.BuilderConfig(name="builder", workernames=["build-slave"], factory=factory)]

####### STATUS TARGETS

# 'status' is a list of Status Targets. The results of each build will be
# pushed to these targets. buildbot/status/*.py has a variety to choose from,
# like IRC bots.

c['status'] = []


# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server is visible. This typically uses the port number set in 
# the 'www' entry below, but with an externally-visible host name which the 
# buildbot cannot figure out without some help.

c['buildbotURL'] = "http://localhost: + HTTP_PORT + "/"

# minimalistic config to activate new web UI
c['www'] = dict(port=HTTP_PORT,
                plugins=dict(waterfall_view={}, console_view={}))

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}
